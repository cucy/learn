package main

import (
	"fmt"
	"math/rand"
	"sync"
)

const numFactorials = 100
const rdLimit = 20

func main() {
	var w sync.WaitGroup
	w.Add(numFactorials)
	factorial(&w)
	w.Wait()

}

func factorial(wmain *sync.WaitGroup) {
	var w sync.WaitGroup
	rand.Seed(42)

	w.Add(numFactorials + 1)

	for j := 1; j <= numFactorials; j++ {

		go func() {
			f := rand.Intn(rdLimit)
			w.Wait()
			total := 1
			for i := f; i > 0; i-- {

				total *= i
			}
			fmt.Println(f, total)
			(*wmain).Done()
			//out <- total

		}()
		w.Done()
	}
	fmt.Println("All done with initialization")
	w.Done()
}

/*

API server listening at: 127.0.0.1:6549
All done with initialization
2 2
6 720
15 1307674368000
18 6402373705728000
4 24
18 6402373705728000
16 20922789888000
7 5040
19 121645100408832000
7 5040
8 40320
12 479001600
12 479001600
16 20922789888000
9 362880
6 720
5 120
7 5040
18 6402373705728000
7 5040
12 479001600
11 39916800
11 39916800
0 1
17 355687428096000
19 121645100408832000
16 20922789888000
2 2
12 479001600
14 87178291200
13 6227020800
4 24
12 479001600
15 1307674368000
1 1
2 2
15 1307674368000
0 1
14 87178291200
12 479001600
15 1307674368000
1 1
7 5040
4 24
3 6
4 24
18 6402373705728000
1 1
2 2
19 121645100408832000
18 6402373705728000
11 39916800
4 24
7 5040
4 24
3 6
3 6
8 40320
16 20922789888000
9 362880
10 3628800
6 720
3 6
0 1
5 120
15 1307674368000
19 121645100408832000
15 1307674368000
16 20922789888000
3 6
8 40320
11 39916800
8 40320
13 6227020800
3 6
16 20922789888000
9 362880
15 1307674368000
15 1307674368000
7 5040
10 3628800
15 1307674368000
12 479001600
15 1307674368000
7 5040
9 362880
4 24
1 1
14 87178291200
2 2
6 720
19 121645100408832000
10 3628800
7 5040
2 2
14 87178291200
18 6402373705728000
7 5040
16 20922789888000
6 720
*/
